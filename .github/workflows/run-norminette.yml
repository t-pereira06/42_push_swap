name: Run Norminette, tests and deploy coverage report

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write
  packages: read

jobs:
  tests-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Docker Image from GHCR
        run: docker pull ghcr.io/t-pereira06/ubuntu-docker:latest

      - name: Run Norminette inside Container
        run: |
          docker run --rm \
          -v ${{ github.workspace }}:/app/push_swap ghcr.io/t-pereira06/ubuntu-docker:latest norminette /app/push_swap || exit 1

      - name: Compile application
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            ghcr.io/t-pereira06/ubuntu-docker:latest \
            bash -c "make" || exit 1

      - name: Run Tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            ghcr.io/t-pereira06/ubuntu-docker:latest \
            bash -c "./tests/bin/run_tests" || bash -c "cmake -B build -S ." ||
            bash -c "cmake --build build -j" || bash -c "./build/test_suite"

      - name: Run Tests and Upload Coverage to Codecov
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            -e CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} \
            ghcr.io/t-pereira06/ubuntu-docker:latest \
            bash -c "lcov --capture --directory build/CMakeFiles/push_swap.dir --output-file coverage.info" ||
            bash -c "lcov --remove coverage.info '*/libft/*' '*/usr/*' '*/lib/*' '*/lib64/*' '*/CMakeFiles/*' -o coverage.filtered.info" ||
            bash -c "genhtml coverage.filtered.info --output-directory coverage_html"

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report
          retention-days: 1

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.info
          slug: t-pereira06/42_push_swap
          fail_ci_if_error: true

  deploy-pages:
    runs-on: ubuntu-latest
    needs: tests-and-coverage

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Download coverage report artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage-report

      - name: Upload coverage-report to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: coverage-report

      - name: Deploy GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
